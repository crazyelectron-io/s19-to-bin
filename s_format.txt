From Wikipedia: SREC (file format)


An SREC format file consists of a series of ASCII text records. The records have the following structure from left to right:

Record structure
S	Type	Byte Count	Address	Data	Checksum


Record type, two characters, an uppercase "S" (0x53) then a numeric digit 0 to 9, defining the type of record.
S1 is a data record. 

Byte count, two hex digits, indicating the number of bytes (hex digit pairs) that follow in the rest of the record (address + data + checksum). This field has a minimum value of 3 for 16-bit address field plus 1 checksum byte, and a maximum value of 255 (0xFF).

Address, four  hex digits as determined by the record type. The address bytes are arranged in big endian format.

Data, a sequence of 2n hex digits, for n bytes of the data. For S1/S2/S3 records, a maximum of 32 bytes per record is typical since it will fit on an 80 character wide terminal screen, though 16 bytes would be easier to visually decode each byte at a specific address.

Checksum, two hex digits, the least significant byte of ones' complement of the sum of the values represented by the two hex digit pairs for the byte count, address and data fields. For example,
if the 8-bit sum of byte+address+data = 9EH, the checksum is 61H which sums to FFH.

Record types

S0 - optional header, with address 0000H, data may be an ASCII string. First record of file.

S1 - data, with some address, some amount of data, up to 72 bytes?.

S5 - optional count, a record with the address value equal to the number of S0+S1 records. Preceeds
last record of file if used.

S9 - start address, with the address value an arbitrary start address for the hex file; or 0000H.
Last record of file. 

EXAMPLE
Here is an example S-Record file. It contains the data “Hello, World\n" to be loaded at address 0
as a file with one data record, with first record with data "HDR", and a start address of 0000H.

S00600004844521B
S110000048656C6C6F2C20576F726C640A9D
S5030001FB
S9030000FC

